{
  "stats": {
    "suites": 9,
    "tests": 38,
    "passes": 26,
    "pending": 0,
    "failures": 3,
    "testsRegistered": 38,
    "passPercent": 68.42105263157895,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 9,
    "hasSkipped": true,
    "start": "2024-11-16T22:28:52.025Z",
    "end": "2024-11-16T22:56:07.098Z",
    "duration": 1635073
  },
  "results": [
    {
      "uuid": "ee84478f-085f-4741-980e-fca68d0b22b6",
      "title": "",
      "fullFile": "cypress/e2e/accessibilityTest.cy.js",
      "file": "cypress/e2e/accessibilityTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ef63fc22-a486-45b2-aef7-5ddcb6ebbada",
          "title": "Quick Accessibility and Element Checks",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checks the Cypress logo link",
              "fullTitle": "Quick Accessibility and Element Checks checks the Cypress logo link",
              "timedOut": null,
              "duration": 760,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Check the Cypress logo link for correct text and href attribute\ncy.get('a.navbar-brand').should('have.text', 'cypress.io') // Check for the correct link text\n.and('have.attr', 'href', '/'); // Check that the link has the correct href",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:53850/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:53850\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Quick Accessibility and Ele...`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:53850/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:53850\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Quick Accessibility and Ele...`\n    at <unknown> (http://localhost:53920/__cypress/runner/cypress_runner.js:131450:74)\n    at visitFailedByErr (http://localhost:53920/__cypress/runner/cypress_runner.js:130849:12)\n    at <unknown> (http://localhost:53920/__cypress/runner/cypress_runner.js:131449:11)\n    at tryCatcher (http://localhost:53920/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:53920/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:53920/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:53920/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:53920/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (http://localhost:53920/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:53920/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:53920/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:53920/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://projecta/./cypress/e2e/accessibilityTest.cy.js:3:9)\n\nFrom Node.js Internals:\n  Error: connect ECONNREFUSED 127.0.0.1:53850\n      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1495:16)",
                "diff": null
              },
              "uuid": "ddbd66a4-9643-43bf-a971-c84389121c21",
              "parentUUID": "ef63fc22-a486-45b2-aef7-5ddcb6ebbada",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checks the navbar toggle button",
              "fullTitle": "Quick Accessibility and Element Checks checks the navbar toggle button",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check the navbar toggle button for its attributes\ncy.get('button.navbar-toggle.collapsed').should('have.attr', 'type', 'button') // Verify type is 'button'\n.and('have.attr', 'data-toggle', 'collapse') // Verify data-toggle attribute\n.and('have.attr', 'data-target', '#navbar'); // Verify data-target attribute\n// Verify that the button contains three icon bars\ncy.get('button.navbar-toggle.collapsed').within(() => {\n  cy.get('.icon-bar').should('have.length', 3); // Check for three icon bars\n});",
              "err": {},
              "uuid": "61092496-2757-4cb8-9742-bf316a8683cc",
              "parentUUID": "ef63fc22-a486-45b2-aef7-5ddcb6ebbada",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ddbd66a4-9643-43bf-a971-c84389121c21"
          ],
          "pending": [],
          "skipped": [
            "61092496-2757-4cb8-9742-bf316a8683cc"
          ],
          "duration": 760,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2c5b4fb2-5131-414c-8179-b4872e3bdf16",
      "title": "",
      "fullFile": "cypress/e2e/apiTest.cy.js",
      "file": "cypress/e2e/apiTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "61ba10d0-9b3e-4253-8d76-f3718ebb5b80",
          "title": "API Testing with Cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET - Read a post",
              "fullTitle": "API Testing with Cypress GET - Read a post",
              "timedOut": null,
              "duration": 2021,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.typicode.com/posts/1').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('id', 1);\n});",
              "err": {},
              "uuid": "6b97f40c-7295-48b8-8e79-e699b85b756f",
              "parentUUID": "61ba10d0-9b3e-4253-8d76-f3718ebb5b80",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Create a new post",
              "fullTitle": "API Testing with Cypress POST - Create a new post",
              "timedOut": null,
              "duration": 1682,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://jsonplaceholder.typicode.com/posts',\n  body: {\n    title: 'New Post',\n    body: 'This is a new post for testing.',\n    userId: 1\n  }\n}).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body).to.have.property('title', 'New Post');\n});",
              "err": {},
              "uuid": "3c018adb-0f6d-49f4-a667-46ea56694060",
              "parentUUID": "61ba10d0-9b3e-4253-8d76-f3718ebb5b80",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update an existing post",
              "fullTitle": "API Testing with Cypress PUT - Update an existing post",
              "timedOut": null,
              "duration": 514,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUT',\n  url: 'https://jsonplaceholder.typicode.com/posts/1',\n  body: {\n    id: 1,\n    title: 'Updated Post',\n    body: 'This post has been updated.',\n    userId: 1\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('title', 'Updated Post');\n});",
              "err": {},
              "uuid": "a85b1bae-3610-4f42-b2f7-65c957203b3f",
              "parentUUID": "61ba10d0-9b3e-4253-8d76-f3718ebb5b80",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete a post",
              "fullTitle": "API Testing with Cypress DELETE - Delete a post",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: 'https://jsonplaceholder.typicode.com/posts/1'\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "774c4aa0-1d5d-4a59-81c6-a3bdf7b1d3ef",
              "parentUUID": "61ba10d0-9b3e-4253-8d76-f3718ebb5b80",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b97f40c-7295-48b8-8e79-e699b85b756f",
            "3c018adb-0f6d-49f4-a667-46ea56694060",
            "a85b1bae-3610-4f42-b2f7-65c957203b3f",
            "774c4aa0-1d5d-4a59-81c6-a3bdf7b1d3ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4678,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c75db7a8-4c14-49a4-a36a-ffd33ca3cfe2",
      "title": "",
      "fullFile": "cypress/e2e/spec.cy.js",
      "file": "cypress/e2e/spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "24dbf06c-56f2-410f-b87c-cb945cbd719d",
          "title": "Cypress Kitchen Sink Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should verify the URL",
              "fullTitle": "Cypress Kitchen Sink Example should verify the URL",
              "timedOut": null,
              "duration": 676,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.url().should('eq', 'http://localhost:53850');",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:53850/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:53850\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Cypress Kitchen Sink Example`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:53850/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:53850\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Cypress Kitchen Sink Example`\n    at <unknown> (http://localhost:53920/__cypress/runner/cypress_runner.js:131450:74)\n    at visitFailedByErr (http://localhost:53920/__cypress/runner/cypress_runner.js:130849:12)\n    at <unknown> (http://localhost:53920/__cypress/runner/cypress_runner.js:131449:11)\n    at tryCatcher (http://localhost:53920/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:53920/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:53920/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:53920/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:53920/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (http://localhost:53920/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:53920/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:53920/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:53920/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://projecta/./cypress/e2e/spec.cy.js:17:7)\n\nFrom Node.js Internals:\n  Error: connect ECONNREFUSED 127.0.0.1:53850\n      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1495:16)",
                "diff": null
              },
              "uuid": "cf2254f3-bc94-4626-b6fd-276e8b4c207b",
              "parentUUID": "24dbf06c-56f2-410f-b87c-cb945cbd719d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select elements and interact with them",
              "fullTitle": "Cypress Kitchen Sink Example should select elements and interact with them",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Querying').click({\n  force: true\n});\ncy.url().should('include', '/commands/querying');\ncy.get('.query-btn').as('queryButton');\ncy.get('@queryButton').click();\ncy.get('@queryButton').should('contain', 'Button');",
              "err": {},
              "uuid": "a48143ab-aa0b-48a7-aec3-fdd5f939d0e2",
              "parentUUID": "24dbf06c-56f2-410f-b87c-cb945cbd719d",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should use assertions to verify element properties",
              "fullTitle": "Cypress Kitchen Sink Example should use assertions to verify element properties",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Actions').click({\n  force: true\n});\ncy.get('#email1').as('emailInput');\ncy.get('@emailInput').type('test@example.com').should('have.value', 'test@example.com');\ncy.get('.action-btn').should('be.visible').and('not.be.disabled');",
              "err": {},
              "uuid": "d1b762e6-af8d-46f3-a65b-3aada9d5dfa3",
              "parentUUID": "24dbf06c-56f2-410f-b87c-cb945cbd719d",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should use aliases for elements",
              "fullTitle": "Cypress Kitchen Sink Example should use aliases for elements",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Actions').click({\n  force: true\n});\ncy.get('#email1').as('emailInput');\ncy.get('.action-btn').as('submitButton');\ncy.get('@emailInput').type('alias@example.com');\ncy.get('@emailInput').should('have.value', 'alias@example.com');\ncy.get('@submitButton').click();",
              "err": {},
              "uuid": "c820c10c-30c9-4c2a-9ea3-2204345901cd",
              "parentUUID": "24dbf06c-56f2-410f-b87c-cb945cbd719d",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should chain commands to perform multiple actions",
              "fullTitle": "Cypress Kitchen Sink Example should chain commands to perform multiple actions",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Actions').click({\n  force: true\n});\ncy.get('.action-focus').type('Chained typing').focus().blur();",
              "err": {},
              "uuid": "e7c585a7-c8fb-444f-9fc4-c1df936649a4",
              "parentUUID": "24dbf06c-56f2-410f-b87c-cb945cbd719d",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should use custom commands",
              "fullTitle": "Cypress Kitchen Sink Example should use custom commands",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('fake@email.com', 'password123');\ncy.get('.action-email').should('have.value', 'fake@email.com');\ncy.url().should('include', '/commands/actions');",
              "err": {},
              "uuid": "bf792988-f0ce-42ac-9828-290e7afcf5f6",
              "parentUUID": "24dbf06c-56f2-410f-b87c-cb945cbd719d",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "successfully logs in with valid credentials,(PageObjects)",
              "fullTitle": "Cypress Kitchen Sink Example successfully logs in with valid credentials,(PageObjects)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const username = 'my username';\n// Use the LoginPage object's login method\n_loginPage.default.login(username);",
              "err": {},
              "uuid": "47c6c60f-8ac7-45a4-b78b-0188d7efd66a",
              "parentUUID": "24dbf06c-56f2-410f-b87c-cb945cbd719d",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should load user fixture data and fill out form",
              "fullTitle": "Cypress Kitchen Sink Example should load user fixture data and fill out form",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Actions').click({\n  force: true\n});\ncy.fixture('user').then(user => {\n  cy.get('#email1').type(user.email).should('have.value', user.email);\n});",
              "err": {},
              "uuid": "d1a11b3c-5171-4136-8710-dc9914bb5a7e",
              "parentUUID": "24dbf06c-56f2-410f-b87c-cb945cbd719d",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "should use actions fixture data to log actions",
              "fullTitle": "Cypress Kitchen Sink Example should use actions fixture data to log actions",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('actions').then(actions => {\n  actions.forEach(action => {\n    cy.log(`Action: ${action.description} - Status: ${action.status}`);\n  });\n});",
              "err": {},
              "uuid": "733f3901-bbb5-48fe-8ebc-d1cd625e76a7",
              "parentUUID": "24dbf06c-56f2-410f-b87c-cb945cbd719d",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cf2254f3-bc94-4626-b6fd-276e8b4c207b"
          ],
          "pending": [],
          "skipped": [
            "a48143ab-aa0b-48a7-aec3-fdd5f939d0e2",
            "d1b762e6-af8d-46f3-a65b-3aada9d5dfa3",
            "c820c10c-30c9-4c2a-9ea3-2204345901cd",
            "e7c585a7-c8fb-444f-9fc4-c1df936649a4",
            "bf792988-f0ce-42ac-9828-290e7afcf5f6",
            "47c6c60f-8ac7-45a4-b78b-0188d7efd66a",
            "d1a11b3c-5171-4136-8710-dc9914bb5a7e",
            "733f3901-bbb5-48fe-8ebc-d1cd625e76a7"
          ],
          "duration": 676,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e8fd3650-9d82-489f-b199-4619aedee9f8",
      "title": "",
      "fullFile": "cypress/e2e/visualRegressionTest.cy.js",
      "file": "cypress/e2e/visualRegressionTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1837606d-0bce-4329-82b5-1436f08b20a2",
          "title": "Percy Visual Regression Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "takes a Percy snapshot of the homepage",
              "fullTitle": "Percy Visual Regression Test takes a Percy snapshot of the homepage",
              "timedOut": null,
              "duration": 737,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('http://localhost:53850/'); // Visit the page to be tested\ncy.percySnapshot('Homepage Snapshot', {\n  width: [768, 992, 1200]\n}); // Take a snapshot with Percy",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:53850/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:53850\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:53850/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:53850\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n    at <unknown> (http://localhost:53920/__cypress/runner/cypress_runner.js:131450:74)\n    at visitFailedByErr (http://localhost:53920/__cypress/runner/cypress_runner.js:130849:12)\n    at <unknown> (http://localhost:53920/__cypress/runner/cypress_runner.js:131449:11)\n    at tryCatcher (http://localhost:53920/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:53920/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:53920/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:53920/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:53920/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (http://localhost:53920/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:53920/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:53920/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:53920/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://projecta/./cypress/e2e/visualRegressionTest.cy.js:3:9)\n\nFrom Node.js Internals:\n  Error: connect ECONNREFUSED 127.0.0.1:53850\n      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1495:16)",
                "diff": null
              },
              "uuid": "387e9f04-55be-4b95-9e1b-3d501f306b89",
              "parentUUID": "1837606d-0bce-4329-82b5-1436f08b20a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "387e9f04-55be-4b95-9e1b-3d501f306b89"
          ],
          "pending": [],
          "skipped": [],
          "duration": 737,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f232513a-18f1-4c7e-b064-08f57860978d",
      "title": "",
      "fullFile": "cypress/e2e/1-getting-started/todo.cy.js",
      "file": "cypress/e2e/1-getting-started/todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "52fdcf66-cd8e-48c8-afb0-ea200b2456d7",
          "title": "example to-do app",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 2099,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2);\n// We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "8ec372a1-1288-4939-adff-c49cbd3b614c",
              "parentUUID": "52fdcf66-cd8e-48c8-afb0-ea200b2456d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can add new todo items",
              "fullTitle": "example to-do app can add new todo items",
              "timedOut": null,
              "duration": 513,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We'll store our item text in a variable so we can reuse it\nconst newItem = 'Feed the cat';\n// Let's get the input element and use the `type` command to\n// input our new list item. After typing the content of our item,\n// we need to type the enter key as well in order to submit the input.\n// This input has a data-test attribute so we'll use that to select the\n// element in accordance with best practices:\n// https://on.cypress.io/selecting-elements\ncy.get('[data-test=new-todo]').type(`${newItem}{enter}`);\n// Now that we've typed our new item, let's check that it actually was added to the list.\n// Since it's the newest item, it should exist as the last element in the list.\n// In addition, with the two default items, we should have a total of 3 elements in the list.\n// Since assertions yield the element that was asserted on,\n// we can chain both of these assertions together into a single statement.\ncy.get('.todo-list li').should('have.length', 3).last().should('have.text', newItem);",
              "err": {},
              "uuid": "ba8946fd-8e50-494c-a5c2-648116f92db5",
              "parentUUID": "52fdcf66-cd8e-48c8-afb0-ea200b2456d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can check off an item as completed",
              "fullTitle": "example to-do app can check off an item as completed",
              "timedOut": null,
              "duration": 304,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// In addition to using the `get` command to get an element by selector,\n// we can also use the `contains` command to get an element by its contents.\n// However, this will yield the <label>, which is lowest-level element that contains the text.\n// In order to check the item, we'll find the <input> element for this <label>\n// by traversing up the dom to the parent element. From there, we can `find`\n// the child checkbox <input> element and use the `check` command to check it.\ncy.contains('Pay electric bill').parent().find('input[type=checkbox]').check();\n// Now that we've checked the button, we can go ahead and make sure\n// that the list element is now marked as completed.\n// Again we'll use `contains` to find the <label> element and then use the `parents` command\n// to traverse multiple levels up the dom until we find the corresponding <li> element.\n// Once we get that element, we can assert that it has the completed class.\ncy.contains('Pay electric bill').parents('li').should('have.class', 'completed');",
              "err": {},
              "uuid": "746bb08a-d733-4683-b134-d5c1ce1aa4f6",
              "parentUUID": "52fdcf66-cd8e-48c8-afb0-ea200b2456d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "dfac82a2-91ba-4890-9e07-2125f0f137dd",
              "title": "with a checked task",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can filter for uncompleted tasks",
                  "fullTitle": "example to-do app with a checked task can filter for uncompleted tasks",
                  "timedOut": null,
                  "duration": 423,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We'll click on the \"active\" button in order to\n// display only incomplete items\ncy.contains('Active').click();\n// After filtering, we can assert that there is only the one\n// incomplete item in the list.\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Walk the dog');\n// For good measure, let's also assert that the task we checked off\n// does not exist on the page.\ncy.contains('Pay electric bill').should('not.exist');",
                  "err": {},
                  "uuid": "28410f9f-9a92-4fd7-ac29-22dbccb2c98f",
                  "parentUUID": "dfac82a2-91ba-4890-9e07-2125f0f137dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can filter for completed tasks",
                  "fullTitle": "example to-do app with a checked task can filter for completed tasks",
                  "timedOut": null,
                  "duration": 402,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can perform similar steps as the test above to ensure\n// that only completed tasks are shown\ncy.contains('Completed').click();\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Pay electric bill');\ncy.contains('Walk the dog').should('not.exist');",
                  "err": {},
                  "uuid": "38627669-4806-4e30-bbfb-0f89d2b33778",
                  "parentUUID": "dfac82a2-91ba-4890-9e07-2125f0f137dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can delete all completed tasks",
                  "fullTitle": "example to-do app with a checked task can delete all completed tasks",
                  "timedOut": null,
                  "duration": 380,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// First, let's click the \"Clear completed\" button\n// `contains` is actually serving two purposes here.\n// First, it's ensuring that the button exists within the dom.\n// This button only appears when at least one task is checked\n// so this command is implicitly verifying that it does exist.\n// Second, it selects the button so we can click it.\ncy.contains('Clear completed').click();\n// Then we can make sure that there is only one element\n// in the list and our element does not exist\ncy.get('.todo-list li').should('have.length', 1).should('not.have.text', 'Pay electric bill');\n// Finally, make sure that the clear button no longer exists.\ncy.contains('Clear completed').should('not.exist');",
                  "err": {},
                  "uuid": "69fbfa0e-0118-4a14-83d7-860fe51dd51c",
                  "parentUUID": "dfac82a2-91ba-4890-9e07-2125f0f137dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28410f9f-9a92-4fd7-ac29-22dbccb2c98f",
                "38627669-4806-4e30-bbfb-0f89d2b33778",
                "69fbfa0e-0118-4a14-83d7-860fe51dd51c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1205,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "8ec372a1-1288-4939-adff-c49cbd3b614c",
            "ba8946fd-8e50-494c-a5c2-648116f92db5",
            "746bb08a-d733-4683-b134-d5c1ce1aa4f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2916,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "33ede036-c599-430f-ade7-2eced68f50cf",
      "title": "",
      "fullFile": "cypress/e2e/accessibilityTest.cy.js",
      "file": "cypress/e2e/accessibilityTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "249dcc2a-3216-4fa8-aa47-086ef1014373",
          "title": "Quick Accessibility and Element Checks",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checks the Cypress logo link",
              "fullTitle": "Quick Accessibility and Element Checks checks the Cypress logo link",
              "timedOut": null,
              "duration": 1649,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check the Cypress logo link for correct text and href attribute\ncy.get('a.navbar-brand').should('have.text', 'cypress.io') // Check for the correct link text\n.and('have.attr', 'href', '/'); // Check that the link has the correct href",
              "err": {},
              "uuid": "c933e1f8-c757-4707-8cd4-597a35b32570",
              "parentUUID": "249dcc2a-3216-4fa8-aa47-086ef1014373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checks the navbar toggle button",
              "fullTitle": "Quick Accessibility and Element Checks checks the navbar toggle button",
              "timedOut": null,
              "duration": 528,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Check the navbar toggle button for its attributes\ncy.get('button.navbar-toggle.collapsed').should('have.attr', 'type', 'button') // Verify type is 'button'\n.and('have.attr', 'data-toggle', 'collapse') // Verify data-toggle attribute\n.and('have.attr', 'data-target', '#navbar'); // Verify data-target attribute\n// Verify that the button contains three icon bars\ncy.get('button.navbar-toggle.collapsed').within(() => {\n  cy.get('.icon-bar').should('have.length', 3); // Check for three icon bars\n});",
              "err": {},
              "uuid": "5ce0748d-beaa-4263-acb4-5ac3dc353a2d",
              "parentUUID": "249dcc2a-3216-4fa8-aa47-086ef1014373",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c933e1f8-c757-4707-8cd4-597a35b32570",
            "5ce0748d-beaa-4263-acb4-5ac3dc353a2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2177,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "83544cc8-6054-4ea9-bf14-991f34504435",
      "title": "",
      "fullFile": "cypress/e2e/apiTest.cy.js",
      "file": "cypress/e2e/apiTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ec31bf00-ebf0-476b-b789-79c66ac561e3",
          "title": "API Testing with Cypress",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET - Read a post",
              "fullTitle": "API Testing with Cypress GET - Read a post",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.typicode.com/posts/1').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('id', 1);\n});",
              "err": {},
              "uuid": "c3cd667e-182d-44e7-abf8-5898d26ca3d6",
              "parentUUID": "ec31bf00-ebf0-476b-b789-79c66ac561e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Create a new post",
              "fullTitle": "API Testing with Cypress POST - Create a new post",
              "timedOut": null,
              "duration": 1883,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'https://jsonplaceholder.typicode.com/posts',\n  body: {\n    title: 'New Post',\n    body: 'This is a new post for testing.',\n    userId: 1\n  }\n}).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body).to.have.property('title', 'New Post');\n});",
              "err": {},
              "uuid": "c9af4e82-6ed2-4674-8439-95fd08e89fe3",
              "parentUUID": "ec31bf00-ebf0-476b-b789-79c66ac561e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Update an existing post",
              "fullTitle": "API Testing with Cypress PUT - Update an existing post",
              "timedOut": null,
              "duration": 1737,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'PUT',\n  url: 'https://jsonplaceholder.typicode.com/posts/1',\n  body: {\n    id: 1,\n    title: 'Updated Post',\n    body: 'This post has been updated.',\n    userId: 1\n  }\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('title', 'Updated Post');\n});",
              "err": {},
              "uuid": "f3811263-bd17-4eee-8513-8ab505b430e7",
              "parentUUID": "ec31bf00-ebf0-476b-b789-79c66ac561e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Delete a post",
              "fullTitle": "API Testing with Cypress DELETE - Delete a post",
              "timedOut": null,
              "duration": 511,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'DELETE',\n  url: 'https://jsonplaceholder.typicode.com/posts/1'\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "7ffb2446-10c4-4127-a3cb-d9960685e7d3",
              "parentUUID": "ec31bf00-ebf0-476b-b789-79c66ac561e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3cd667e-182d-44e7-abf8-5898d26ca3d6",
            "c9af4e82-6ed2-4674-8439-95fd08e89fe3",
            "f3811263-bd17-4eee-8513-8ab505b430e7",
            "7ffb2446-10c4-4127-a3cb-d9960685e7d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4304,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fb92d5a0-dfe2-4e25-8416-caf3b649656b",
      "title": "",
      "fullFile": "cypress/e2e/spec.cy.js",
      "file": "cypress/e2e/spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8a106438-2213-4f44-95eb-dcb98cc3dc47",
          "title": "Cypress Kitchen Sink Example",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should verify the URL",
              "fullTitle": "Cypress Kitchen Sink Example should verify the URL",
              "timedOut": null,
              "duration": 540,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.url().should('eq', 'https://example.cypress.io/');",
              "err": {},
              "uuid": "c528746d-882d-42a5-9495-a1b354b532e4",
              "parentUUID": "8a106438-2213-4f44-95eb-dcb98cc3dc47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select elements and interact with them",
              "fullTitle": "Cypress Kitchen Sink Example should select elements and interact with them",
              "timedOut": null,
              "duration": 772,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Querying').click({\n  force: true\n});\ncy.url().should('include', '/commands/querying');\ncy.get('.query-btn').as('queryButton');\ncy.get('@queryButton').click();\ncy.get('@queryButton').should('contain', 'Button');",
              "err": {},
              "uuid": "6c2265f3-60ac-4616-a039-bb162cac6a98",
              "parentUUID": "8a106438-2213-4f44-95eb-dcb98cc3dc47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use assertions to verify element properties",
              "fullTitle": "Cypress Kitchen Sink Example should use assertions to verify element properties",
              "timedOut": null,
              "duration": 1012,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Actions').click({\n  force: true\n});\ncy.get('#email1').as('emailInput');\ncy.get('@emailInput').type('test@example.com').should('have.value', 'test@example.com');\ncy.get('.action-btn').should('be.visible').and('not.be.disabled');",
              "err": {},
              "uuid": "77df1f93-1aef-4066-9cf3-385dafef5a6a",
              "parentUUID": "8a106438-2213-4f44-95eb-dcb98cc3dc47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use aliases for elements",
              "fullTitle": "Cypress Kitchen Sink Example should use aliases for elements",
              "timedOut": null,
              "duration": 887,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Actions').click({\n  force: true\n});\ncy.get('#email1').as('emailInput');\ncy.get('.action-btn').as('submitButton');\ncy.get('@emailInput').type('alias@example.com');\ncy.get('@emailInput').should('have.value', 'alias@example.com');\ncy.get('@submitButton').click();",
              "err": {},
              "uuid": "b4c7573f-eb2f-4321-bf64-ae82e341adaa",
              "parentUUID": "8a106438-2213-4f44-95eb-dcb98cc3dc47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should chain commands to perform multiple actions",
              "fullTitle": "Cypress Kitchen Sink Example should chain commands to perform multiple actions",
              "timedOut": null,
              "duration": 814,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Actions').click({\n  force: true\n});\ncy.get('.action-focus').type('Chained typing').focus().blur();",
              "err": {},
              "uuid": "7032dc26-7810-4de4-93f2-400e15678b53",
              "parentUUID": "8a106438-2213-4f44-95eb-dcb98cc3dc47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use custom commands",
              "fullTitle": "Cypress Kitchen Sink Example should use custom commands",
              "timedOut": null,
              "duration": 865,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login('fake@email.com', 'password123');\ncy.get('.action-email').should('have.value', 'fake@email.com');\ncy.url().should('include', '/commands/actions');",
              "err": {},
              "uuid": "0236da7b-316d-4e2b-b936-a98f39d14efd",
              "parentUUID": "8a106438-2213-4f44-95eb-dcb98cc3dc47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully logs in with valid credentials,(PageObjects)",
              "fullTitle": "Cypress Kitchen Sink Example successfully logs in with valid credentials,(PageObjects)",
              "timedOut": null,
              "duration": 895,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const username = 'my username';\n// Use the LoginPage object's login method\n_loginPage.default.login(username);",
              "err": {},
              "uuid": "f6e5719c-4bf8-4a36-9aa6-8aaed3d563e1",
              "parentUUID": "8a106438-2213-4f44-95eb-dcb98cc3dc47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should load user fixture data and fill out form",
              "fullTitle": "Cypress Kitchen Sink Example should load user fixture data and fill out form",
              "timedOut": null,
              "duration": 839,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Actions').click({\n  force: true\n});\ncy.fixture('user').then(user => {\n  cy.get('#email1').type(user.email).should('have.value', user.email);\n});",
              "err": {},
              "uuid": "48a57df1-a816-41b8-a125-8615ecc5b6e6",
              "parentUUID": "8a106438-2213-4f44-95eb-dcb98cc3dc47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use actions fixture data to log actions",
              "fullTitle": "Cypress Kitchen Sink Example should use actions fixture data to log actions",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('actions').then(actions => {\n  actions.forEach(action => {\n    cy.log(`Action: ${action.description} - Status: ${action.status}`);\n  });\n});",
              "err": {},
              "uuid": "caa7d6ba-8710-4c0b-9065-7a12df4e9d51",
              "parentUUID": "8a106438-2213-4f44-95eb-dcb98cc3dc47",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c528746d-882d-42a5-9495-a1b354b532e4",
            "6c2265f3-60ac-4616-a039-bb162cac6a98",
            "77df1f93-1aef-4066-9cf3-385dafef5a6a",
            "b4c7573f-eb2f-4321-bf64-ae82e341adaa",
            "7032dc26-7810-4de4-93f2-400e15678b53",
            "0236da7b-316d-4e2b-b936-a98f39d14efd",
            "f6e5719c-4bf8-4a36-9aa6-8aaed3d563e1",
            "48a57df1-a816-41b8-a125-8615ecc5b6e6",
            "caa7d6ba-8710-4c0b-9065-7a12df4e9d51"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6843,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3faa15fe-5afd-497f-852e-a043e66566ab",
      "title": "",
      "fullFile": "cypress/e2e/visualRegressionTest.cy.js",
      "file": "cypress/e2e/visualRegressionTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6bd1adb5-6ca6-47e2-ba38-fe7639c7c8ae",
          "title": "Percy Visual Regression Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "takes a Percy snapshot of the homepage",
              "fullTitle": "Percy Visual Regression Test takes a Percy snapshot of the homepage",
              "timedOut": null,
              "duration": 581,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io'); // Visit the page to be tested\ncy.percySnapshot('Homepage Snapshot', {\n  width: [768, 992, 1200]\n}); // Take a snapshot with Percy",
              "err": {},
              "uuid": "1a94ddbc-dbf1-4bc2-bfa9-54007c180617",
              "parentUUID": "6bd1adb5-6ca6-47e2-ba38-fe7639c7c8ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a94ddbc-dbf1-4bc2-bfa9-54007c180617"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 581,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}